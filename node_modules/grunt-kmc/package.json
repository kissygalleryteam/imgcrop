{
  "name": "grunt-kmc",
  "description": "Grunt plugin for KISSY Module Compiler",
  "version": "0.1.3",
  "homepage": "https://github.com/daxingplay/grunt-kmc",
  "author": {
    "name": "daxingplay",
    "email": "daxingplay@gmail.com",
    "url": "techcheng.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/daxingplay/grunt-kmc.git"
  },
  "bugs": {
    "url": "https://github.com/daxingplay/grunt-kmc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/daxingplay/grunt-kmc/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "kmc": "~1.0.7"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-kmc\r\n\r\n[![Build Status](https://travis-ci.org/daxingplay/grunt-kmc.png?branch=master)](https://travis-ci.org/daxingplay/grunt-kmc)\r\n\r\n[![NPM version](https://badge.fury.io/js/grunt-kmc.png)](http://badge.fury.io/js/grunt-kmc)\r\n\r\n> Grunt plugin for KISSY Module Compiler\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-kmc --save-dev\r\n```\r\n\r\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-kmc');\r\n```\r\n\r\n## The \"kmc\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `kmc` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  kmc: {\r\n    options: {\r\n      // Task-specific options go here.\r\n      // for options, please refer to [kmc](https://github.com/daxingplay/ModuleCompiler).\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.packages\r\nType: `Array`\r\nDefault value: `[]`\r\n\r\nKISSY package configuration.\r\n\r\n#### options.charset\r\nType: `String`\r\nDefault value: `utf-8`\r\n\r\noutput charset.\r\n\r\n### Usage Examples\r\n\r\n#### Simple Example\r\n\r\n```js\r\ngrunt.initConfig({\r\n  kmc: {\r\n    main:\r\n        options: {\r\n            packages: [\r\n                {\r\n                    name: 'test',\r\n                    path: 'assets/src',\r\n                    charset: 'gbk'\r\n                }\r\n            ]\r\n        },\r\n        files: [{\r\n            src: 'assets/src/test/index.js',\r\n            dest: 'assets/dist/test/index.combo.js'\r\n        }]\r\n  }\r\n})\r\n```\r\n\r\nFor detailed options configuration, please refer [kmc homepage](https://github.com/daxingplay/ModuleCompiler).\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "_id": "grunt-kmc@0.1.3",
  "dist": {
    "shasum": "10103f736ab5034e5350b839928b58e7011a0ee4"
  },
  "_from": "grunt-kmc"
}
